{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\New folder (5)\\\\wayslink\\\\client\\\\src\\\\components\\\\Create\\\\CreateLink.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useContext, useEffect } from 'react';\nimport styleCSS from './CreateLink.module.css';\nimport { API } from '../../config/api';\nimport { UserContext } from '../../context/userContext';\nimport Phone2 from '../../assets/Phone2.png';\nimport Chess from '../../assets/Chess.png';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateLink = _ref => {\n  _s();\n\n  let {\n    template\n  } = _ref;\n  const navigate = useNavigate(); // Add card in form\n\n  const [cardForm, setCardForm] = useState([{\n    titlelinks: \"\",\n    links: \"\"\n  }, {\n    titlelinks: \"\",\n    links: \"\"\n  }]); // Function for add a card when add button clicked\n\n  const addForm = () => {\n    setCardForm([...cardForm, {\n      titlelinks: \"\",\n      links: \"\"\n    }]);\n  }; // Function for delete a card when delete button clicked\n\n\n  const removeForm = index => {\n    const values = [...cardForm];\n    values.splice(index, 1);\n    setCardForm(values);\n  }; // Function to change the value of links components\n\n\n  const formOnChange = (index, e) => {\n    const values = [...cardForm];\n    values[index][e.target.name] = e.target.value;\n    setCardForm(values);\n  };\n\n  const arr1 = cardForm.map(_ref2 => {\n    let {\n      titlelinks\n    } = _ref2;\n    return titlelinks;\n  });\n  const arr2 = cardForm.map(_ref3 => {\n    let {\n      links\n    } = _ref3;\n    return links;\n  }); // For title, description and image\n\n  const [imagePreview, setImagePreview] = useState(null);\n  const [linkData, setLinkData] = useState({\n    titleform: \"\",\n    descriptionform: \"\",\n    imageform: \"\"\n  });\n\n  const mainOnChange = e => {\n    setLinkData({ ...linkData,\n      [e.target.name]: e.target.value,\n      [e.target.name]: e.target.type === 'file' ? e.target.files : e.target.value\n    });\n\n    if (e.target.type === 'file') {\n      let url = URL.createObjectURL(e.target.files[0]);\n      setImagePreview(url);\n    }\n  }; // POST API\n\n\n  const handleOnSubmit = async e => {\n    try {\n      e.preventDefault();\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const formData = new FormData();\n      formData.set('title', linkData.titleform);\n      formData.set('description', linkData.descriptionform);\n      formData.set('image', linkData.imageform[0], linkData.imageform[0].name);\n      formData.set('titlelink', arr1);\n      formData.set('link', arr2);\n      const response = await API.post('/publishlink', formData, config);\n      console.log(response);\n      navigate('/myLinks');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(arr1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styleCSS.createLinkContent,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styleCSS.createLinkHeader,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styleCSS.createLinkForm,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styleCSS.createLinkFormTop,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Create Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styleCSS.formTopButton,\n            type: \"submit\",\n            children: \"Publish Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styleCSS.createLinkFormBottom,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styleCSS.createLinkFormInput,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styleCSS.createLinkFormInputChild,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styleCSS.imagePreview,\n                children: [imagePreview && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imagePreview,\n                  alt: \"Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"image\",\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"imageform\",\n                  id: \"image\",\n                  className: styleCSS.uploadButton,\n                  onChange: mainOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styleCSS.mainInput,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"titleform\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"titleform\",\n                  onChange: mainOnChange,\n                  autoComplete: \"off\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"descriptionform\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"descriptionform\",\n                  onChange: mainOnChange,\n                  autoComplete: \"off\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), cardForm.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styleCSS.secondInput,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styleCSS.linksCard,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styleCSS.linkImage,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: Chess,\n                      alt: \"link image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => removeForm(index),\n                      disabled: cardForm.length === 2,\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styleCSS.linkInput,\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      for: \"titlelinkform\",\n                      children: \"Title Link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"titlelinks\",\n                      onChange: e => formOnChange(index, e),\n                      autoComplete: \"off\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      for: \"titlelinkform\",\n                      children: \"Link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"links\",\n                      onChange: e => formOnChange(index, e),\n                      autoComplete: \"off\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 45\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styleCSS.addLinkButton,\n                onClick: addForm,\n                children: \"Add new Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styleCSS.createLinkFormTemplatePreview,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: template,\n              alt: \"Template 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateLink, \"PC3L0SVrXZq9jgUT0i9bB9ttk7M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateLink;\nexport default CreateLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateLink\");","map":{"version":3,"sources":["C:/Users/Hp/OneDrive/Desktop/New folder (5)/wayslink/client/src/components/Create/CreateLink.jsx"],"names":["react","useState","useContext","useEffect","styleCSS","API","UserContext","Phone2","Chess","useNavigate","CreateLink","template","navigate","cardForm","setCardForm","titlelinks","links","addForm","removeForm","index","values","splice","formOnChange","e","target","name","value","arr1","map","arr2","imagePreview","setImagePreview","linkData","setLinkData","titleform","descriptionform","imageform","mainOnChange","type","files","url","URL","createObjectURL","handleOnSubmit","preventDefault","config","headers","formData","FormData","set","response","post","console","log","error","createLinkContent","createLinkHeader","createLinkForm","createLinkFormTop","formTopButton","createLinkFormBottom","createLinkFormInput","createLinkFormInputChild","uploadButton","mainInput","item","secondInput","linksCard","linkImage","length","linkInput","addLinkButton","createLinkFormTemplatePreview"],"mappings":"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","sourcesContent":["import react, { useState, useContext, useEffect } from 'react'\r\nimport styleCSS from './CreateLink.module.css'\r\nimport { API } from '../../config/api'\r\nimport { UserContext } from '../../context/userContext'\r\nimport Phone2 from '../../assets/Phone2.png'\r\nimport Chess from '../../assets/Chess.png'\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst CreateLink = ({ template }) => {\r\n    const navigate = useNavigate()\r\n    // Add card in form\r\n    const [cardForm, setCardForm] = useState([\r\n        {titlelinks: \"\", links: \"\"},\r\n        {titlelinks: \"\", links: \"\"},\r\n    ])\r\n    \r\n    // Function for add a card when add button clicked\r\n    const addForm = () => {\r\n        setCardForm([...cardForm, { titlelinks: \"\", links: \"\" }]);\r\n    };\r\n\r\n    // Function for delete a card when delete button clicked\r\n    const removeForm = (index) => {\r\n        const values = [...cardForm]\r\n        values.splice(index, 1)\r\n        setCardForm(values)\r\n    }\r\n\r\n    // Function to change the value of links components\r\n    const formOnChange = (index, e) => {\r\n        const values = [...cardForm]\r\n        values[index][e.target.name] = e.target.value\r\n        setCardForm(values)\r\n    }\r\n\r\n    const arr1 = cardForm.map(({ titlelinks }) => titlelinks)\r\n    const arr2 = cardForm.map(({ links }) => links)\r\n\r\n    // For title, description and image\r\n    const [imagePreview, setImagePreview] = useState(null)\r\n    const [linkData, setLinkData] = useState({\r\n        titleform: \"\",\r\n        descriptionform: \"\",\r\n        imageform: \"\"\r\n    })\r\n\r\n    const mainOnChange = (e) => {\r\n        setLinkData({\r\n            ...linkData,\r\n            [e.target.name] : e.target.value,\r\n            [e.target.name] : e.target.type === 'file' ? e.target.files : e.target.value\r\n        })\r\n\r\n        if (e.target.type === 'file') {\r\n            let url = URL.createObjectURL(e.target.files[0])\r\n            setImagePreview(url)\r\n        }\r\n    }\r\n\r\n    // POST API\r\n    const handleOnSubmit = async(e) => {\r\n        try {\r\n            e.preventDefault()\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\" : \"multipart/form-data\"\r\n                }\r\n            }\r\n\r\n            const formData = new FormData()\r\n            formData.set('title', linkData.titleform)\r\n            formData.set('description', linkData.descriptionform)\r\n            formData.set('image', linkData.imageform[0], linkData.imageform[0].name)\r\n            formData.set('titlelink', arr1)\r\n            formData.set('link', arr2)\r\n\r\n            const response = await API.post('/publishlink', formData, config)\r\n            console.log(response)\r\n            navigate('/myLinks')\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    console.log(arr1)\r\n\r\n    return (\r\n        <div className={styleCSS.createLinkContent}>\r\n            <div className={styleCSS.createLinkHeader}>\r\n                <p>Template</p>\r\n            </div>\r\n            <div className={styleCSS.createLinkForm}>\r\n                <form onSubmit={handleOnSubmit}>\r\n                    <div className={styleCSS.createLinkFormTop}>\r\n                        <p>Create Link</p>\r\n                        <button className={styleCSS.formTopButton} type='submit'>Publish Link</button>\r\n                    </div>\r\n                    <div className={styleCSS.createLinkFormBottom}>\r\n                        <div className={styleCSS.createLinkFormInput}>\r\n                            <div className={styleCSS.createLinkFormInputChild}>\r\n                                <div className={styleCSS.imagePreview}>\r\n                                    {imagePreview && (\r\n                                        <img src={imagePreview} alt='Preview' />\r\n                                    )}\r\n                                    <label for='image'>Upload</label>\r\n                                    <input type='file' name='imageform' id='image' className={styleCSS.uploadButton} onChange={mainOnChange}/>\r\n                                </div>\r\n                                <div className={styleCSS.mainInput}>\r\n                                    <label for='titleform'>Title</label>\r\n                                    <input type='text' name='titleform' onChange={mainOnChange} autoComplete=\"off\" required/>\r\n                                    <label for='descriptionform'>Description</label>\r\n                                    <input type='text' name='descriptionform' onChange={mainOnChange} autoComplete=\"off\" required/>\r\n                                </div>\r\n                                {cardForm.map((item, index) => (\r\n                                    <div className={styleCSS.secondInput}>\r\n                                        <div className={styleCSS.linksCard} key={index}>\r\n                                            <div className={styleCSS.linkImage}>\r\n                                                <img src={Chess} alt='link image' />\r\n                                                <button onClick={() => removeForm(index)} disabled={cardForm.length === 2}>Delete</button>\r\n                                            </div>\r\n                                            <div className={styleCSS.linkInput}>\r\n                                                <label for='titlelinkform'>Title Link</label>\r\n                                                <input type='text' name='titlelinks' onChange={(e) => formOnChange(index, e)} autoComplete=\"off\" required/>\r\n                                                <label for='titlelinkform'>Link</label>\r\n                                                <input type='text' name='links' onChange={(e) => formOnChange(index, e)} autoComplete=\"off\" required/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            <button className={styleCSS.addLinkButton} onClick={addForm}>Add new Link</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styleCSS.createLinkFormTemplatePreview}>\r\n                            <img src={template} alt='Template 2' />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateLink"]},"metadata":{},"sourceType":"module"}
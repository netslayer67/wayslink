{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\New folder (5)\\\\wayslink\\\\client\\\\src\\\\components\\\\Create\\\\CreateLink.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useContext, useEffect } from \"react\";\nimport styleCSS from \"./CreateLink.module.css\";\nimport { API } from \"../../config/api\";\nimport { UserContext } from \"../../context/userContext\";\nimport Phone1 from \"../../assets/Phone1.png\";\nimport Phone2 from \"../../assets/Phone2.png\";\nimport Phone3 from \"../../assets/Phone3.png\";\nimport Phone4 from \"../../assets/Phone4.png\";\nimport Chess from \"../../assets/Chess.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateLink = _ref => {\n  _s();\n\n  let {\n    template\n  } = _ref;\n  let templateSrc;\n  if (template === \"phone1\") templateSrc = Phone1;\n  if (template === \"phone2\") templateSrc = Phone2;\n  if (template === \"phone3\") templateSrc = Phone3;\n  if (template === \"phone4\") templateSrc = Phone4;\n  const navigate = useNavigate(); // Add card in form\n\n  const [cardForm, setCardForm] = useState([{\n    titlelinks: \"\",\n    links: \"\"\n  }, {\n    titlelinks: \"\",\n    links: \"\"\n  }]); // Function for add a card when add button clicked\n\n  const addForm = () => {\n    setCardForm([...cardForm, {\n      titlelinks: \"\",\n      links: \"\"\n    }]);\n  }; // Function for delete a card when delete button clicked\n\n\n  const removeForm = index => {\n    const values = [...cardForm];\n    values.splice(index, 1);\n    setCardForm(values);\n  }; // Function to change the value of links components\n\n\n  const formOnChange = (index, e) => {\n    const values = [...cardForm];\n    values[index][e.target.name] = e.target.value;\n    setCardForm(values);\n  };\n\n  const arr1 = cardForm.map(_ref2 => {\n    let {\n      titlelinks\n    } = _ref2;\n    return titlelinks;\n  });\n  const arr2 = cardForm.map(_ref3 => {\n    let {\n      links\n    } = _ref3;\n    return links;\n  }); // For title, description and image\n\n  const [imagePreview, setImagePreview] = useState(null);\n  const [linkData, setLinkData] = useState({\n    titleform: \"\",\n    descriptionform: \"\",\n    imageform: \"\",\n    template\n  });\n\n  const mainOnChange = e => {\n    setLinkData({ ...linkData,\n      [e.target.name]: e.target.value,\n      [e.target.name]: e.target.type === \"file\" ? e.target.files : e.target.value\n    });\n\n    if (e.target.type === \"file\") {\n      let url = URL.createObjectURL(e.target.files[0]);\n      setImagePreview(url);\n    }\n  }; // POST API\n  // const handleOnSubmit = async (e) => {\n  //   try {\n  //     e.preventDefault();\n  //     const config = {\n  //       headers: {\n  //         \"Content-Type\": \"multipart/form-data\",\n  //       },\n  //     };\n  //     const formData = new FormData();\n  //     formData.set(\"title\", linkData.titleform);\n  //     formData.set(\"description\", linkData.descriptionform);\n  //     formData.set(\"image\", linkData.imageform[0], linkData.imageform[0].name);\n  //     formData.set(\"titlelink\", arr1);\n  //     formData.set(\"link\", arr2);\n  //     const response = await API.post(\"/publishlink\", formData, config);\n  //     console.log(response);\n  //     navigate(\"/myLinks\");\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  // Submit Link\n\n\n  const handleSubmitLink = async e => {\n    try {\n      e.preventDefault();\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const formData = new FormData();\n      form;\n    } catch (error) {}\n  };\n\n  console.log(arr1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styleCSS.createLinkContent,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styleCSS.createLinkHeader,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styleCSS.createLinkForm,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styleCSS.createLinkFormTop,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Create Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styleCSS.createLinkFormBottom,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styleCSS.createLinkFormInput,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styleCSS.createLinkFormInputChild,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styleCSS.imagePreview,\n                children: [imagePreview && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imagePreview,\n                  alt: \"Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"image\",\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"imageform\",\n                  id: \"image\",\n                  className: styleCSS.uploadButton,\n                  onChange: mainOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styleCSS.mainInput,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"titleform\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"titleform\",\n                  onChange: mainOnChange,\n                  autoComplete: \"off\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"descriptionform\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"descriptionform\",\n                  onChange: mainOnChange,\n                  autoComplete: \"off\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: styleCSS.addLinkButton,\n                    onClick: addForm,\n                    children: \"Add new link\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styleCSS.createLinkFormTemplatePreview,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: templateSrc,\n              alt: \"Template 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateLink, \"GukNvKL/vDDEUI8awlRSdQsGtiw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateLink;\nexport default CreateLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateLink\");","map":{"version":3,"sources":["C:/Users/Hp/OneDrive/Desktop/New folder (5)/wayslink/client/src/components/Create/CreateLink.jsx"],"names":["react","useState","useContext","useEffect","styleCSS","API","UserContext","Phone1","Phone2","Phone3","Phone4","Chess","useNavigate","CreateLink","template","templateSrc","navigate","cardForm","setCardForm","titlelinks","links","addForm","removeForm","index","values","splice","formOnChange","e","target","name","value","arr1","map","arr2","imagePreview","setImagePreview","linkData","setLinkData","titleform","descriptionform","imageform","mainOnChange","type","files","url","URL","createObjectURL","handleSubmitLink","preventDefault","config","headers","formData","FormData","form","error","console","log","createLinkContent","createLinkHeader","createLinkForm","handleOnSubmit","createLinkFormTop","createLinkFormBottom","createLinkFormInput","createLinkFormInputChild","uploadButton","mainInput","addLinkButton","createLinkFormTemplatePreview"],"mappings":"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","sourcesContent":["import react, { useState, useContext, useEffect } from \"react\";\r\nimport styleCSS from \"./CreateLink.module.css\";\r\nimport { API } from \"../../config/api\";\r\nimport { UserContext } from \"../../context/userContext\";\r\nimport Phone1 from \"../../assets/Phone1.png\";\r\nimport Phone2 from \"../../assets/Phone2.png\";\r\nimport Phone3 from \"../../assets/Phone3.png\";\r\nimport Phone4 from \"../../assets/Phone4.png\";\r\nimport Chess from \"../../assets/Chess.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CreateLink = ({ template }) => {\r\n  let templateSrc;\r\n\r\n  if (template === \"phone1\") templateSrc = Phone1;\r\n  if (template === \"phone2\") templateSrc = Phone2;\r\n  if (template === \"phone3\") templateSrc = Phone3;\r\n  if (template === \"phone4\") templateSrc = Phone4;\r\n\r\n  const navigate = useNavigate();\r\n  // Add card in form\r\n  const [cardForm, setCardForm] = useState([\r\n    { titlelinks: \"\", links: \"\" },\r\n    { titlelinks: \"\", links: \"\" },\r\n  ]);\r\n\r\n  // Function for add a card when add button clicked\r\n  const addForm = () => {\r\n    setCardForm([...cardForm, { titlelinks: \"\", links: \"\" }]);\r\n  };\r\n\r\n  // Function for delete a card when delete button clicked\r\n  const removeForm = (index) => {\r\n    const values = [...cardForm];\r\n    values.splice(index, 1);\r\n    setCardForm(values);\r\n  };\r\n\r\n  // Function to change the value of links components\r\n  const formOnChange = (index, e) => {\r\n    const values = [...cardForm];\r\n    values[index][e.target.name] = e.target.value;\r\n    setCardForm(values);\r\n  };\r\n\r\n  const arr1 = cardForm.map(({ titlelinks }) => titlelinks);\r\n  const arr2 = cardForm.map(({ links }) => links);\r\n\r\n  // For title, description and image\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [linkData, setLinkData] = useState({\r\n    titleform: \"\",\r\n    descriptionform: \"\",\r\n    imageform: \"\",\r\n    template,\r\n  });\r\n\r\n  const mainOnChange = (e) => {\r\n    setLinkData({\r\n      ...linkData,\r\n      [e.target.name]: e.target.value,\r\n      [e.target.name]:\r\n        e.target.type === \"file\" ? e.target.files : e.target.value,\r\n    });\r\n\r\n    if (e.target.type === \"file\") {\r\n      let url = URL.createObjectURL(e.target.files[0]);\r\n      setImagePreview(url);\r\n    }\r\n  };\r\n\r\n  // POST API\r\n  // const handleOnSubmit = async (e) => {\r\n  //   try {\r\n  //     e.preventDefault();\r\n  //     const config = {\r\n  //       headers: {\r\n  //         \"Content-Type\": \"multipart/form-data\",\r\n  //       },\r\n  //     };\r\n\r\n  //     const formData = new FormData();\r\n  //     formData.set(\"title\", linkData.titleform);\r\n  //     formData.set(\"description\", linkData.descriptionform);\r\n  //     formData.set(\"image\", linkData.imageform[0], linkData.imageform[0].name);\r\n  //     formData.set(\"titlelink\", arr1);\r\n  //     formData.set(\"link\", arr2);\r\n\r\n  //     const response = await API.post(\"/publishlink\", formData, config);\r\n  //     console.log(response);\r\n  //     navigate(\"/myLinks\");\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  // Submit Link\r\n  const handleSubmitLink = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const formData = new FormData();\r\n      form\r\n    } catch (error) {}\r\n  };\r\n\r\n  console.log(arr1);\r\n\r\n  return (\r\n    <div className={styleCSS.createLinkContent}>\r\n      <div className={styleCSS.createLinkHeader}>\r\n        <p>Template</p>\r\n      </div>\r\n      <div className={styleCSS.createLinkForm}>\r\n        <form onSubmit={handleOnSubmit}>\r\n          <div className={styleCSS.createLinkFormTop}>\r\n            <p>Create Link</p>\r\n            {/* <button className={styleCSS.formTopButton} type=\"submit\">\r\n              Publish Link\r\n            </button> */}\r\n          </div>\r\n          <div className={styleCSS.createLinkFormBottom}>\r\n            <div className={styleCSS.createLinkFormInput}>\r\n              <div className={styleCSS.createLinkFormInputChild}>\r\n                <div className={styleCSS.imagePreview}>\r\n                  {imagePreview && <img src={imagePreview} alt=\"Preview\" />}\r\n                  <label for=\"image\">Upload</label>\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"imageform\"\r\n                    id=\"image\"\r\n                    className={styleCSS.uploadButton}\r\n                    onChange={mainOnChange}\r\n                  />\r\n                </div>\r\n                <div className={styleCSS.mainInput}>\r\n                  <label for=\"titleform\">Title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"titleform\"\r\n                    onChange={mainOnChange}\r\n                    autoComplete=\"off\"\r\n                    required\r\n                  />\r\n                  <label for=\"descriptionform\">Description</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"descriptionform\"\r\n                    onChange={mainOnChange}\r\n                    autoComplete=\"off\"\r\n                    required\r\n                  />\r\n                  <div className=\"mt-3\">\r\n                    <button\r\n                      className={styleCSS.addLinkButton}\r\n                      onClick={addForm}\r\n                    >\r\n                      Add new link\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {/* {cardForm.map((item, index) => (\r\n                  <div className={styleCSS.secondInput}>\r\n                    <div className={styleCSS.linksCard} key={index}>\r\n                      <div className={styleCSS.linkImage}>\r\n                        <img src={Chess} alt=\"link image\" />\r\n                        <button\r\n                          onClick={() => removeForm(index)}\r\n                          disabled={cardForm.length === 2}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                      <div className={styleCSS.linkInput}>\r\n                        <label for=\"titlelinkform\">Title Link</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"titlelinks\"\r\n                          onChange={(e) => formOnChange(index, e)}\r\n                          autoComplete=\"off\"\r\n                          required\r\n                        />\r\n                        <label for=\"titlelinkform\">Link</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"links\"\r\n                          onChange={(e) => formOnChange(index, e)}\r\n                          autoComplete=\"off\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                // ))} */}\r\n                {/* // <button className={styleCSS.addLinkButton} onClick={addForm}>\r\n                //   Add new Link\r\n                // </button> */}\r\n              </div>\r\n            </div>\r\n            <div className={styleCSS.createLinkFormTemplatePreview}>\r\n              <img src={templateSrc} alt=\"Template 2\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateLink;\r\n"]},"metadata":{},"sourceType":"module"}